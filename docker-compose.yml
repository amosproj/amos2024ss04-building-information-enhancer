services:
  # Frontend - Apache HTTP server (React + Typescript)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    image: ghcr.io/amosproj/amos2024ss04-building-information-enhancer-frontend:${DOCKER_COMPOSE_IMAGES_TAG}
    environment:
      - NODE_ENV=${ENVIRONMENT_STAGE}
    networks:
      - bie-network
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}

  # API Gateway for listening for FE requests
  api-gateway:
    build:
      context: ./backend/src/BIE.Core
      dockerfile: Dockerfile
    container_name: api-gateway
    image: ghcr.io/amosproj/amos2024ss04-building-information-enhancer-api-gateway:${DOCKER_COMPOSE_IMAGES_TAG}
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT_STAGE}
      - DB_NAME=BIEDB
      - DB_PASSWORD=MyPass@1234
      - DB_SERVER=sql-db
      - DB_USERNAME=sa
      - DB_TYPE=SQL
      - TRUSTED=False
    ports:
      - ${VITE_BACKEND_PORT}:80
    networks:
      - bie-network
    depends_on:
      - sql-db

  ## Data Pipeline for ingesting the datasets
  datapipeline:
    build:
      context: ./backend/src/BIE.DataPipeline
      dockerfile: Dockerfile
    image: ghcr.io/amosproj/amos2024ss04-building-information-enhancer-datapipeline:${DOCKER_COMPOSE_IMAGES_TAG}
    environment:
      - DB_NAME=BIEDB
      - DB_PASSWORD=MyPass@1234
      - DB_SERVER=sql-db
      - DB_USERNAME=sa
      - DB_TYPE=SQL
      - TRUSTED=False
    container_name: datapipeline
    networks:
      - bie-network
    depends_on:
      - sql-db

  ## Main SQL DB for storing the datasets
  sql-db:
    build:
      context: ./backend/database
      dockerfile: Dockerfile
    container_name: sql-db
    image: ghcr.io/amosproj/amos2024ss04-building-information-enhancer-sql-database:${DOCKER_COMPOSE_IMAGES_TAG}
    networks:
      - bie-network
#     volumes:
#       - bie-mssqldata:/var/opt/mssql

# volumes:
#   bie-mssqldata:

networks:
  bie-network:
    driver: bridge
